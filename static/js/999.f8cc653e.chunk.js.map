{"version":3,"file":"static/js/999.f8cc653e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","redux/contacts/selectors/selectors.js","components/сontactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","pages/Сontacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__kVtvE\",\"list\":\"ContactList_list__S-drv\",\"item\":\"ContactList_item__-Qv6N\",\"text\":\"ContactList_text__ap480\",\"app\":\"ContactList_app__UqOF7\",\"input\":\"ContactList_input__0emIx\",\"buttonForm\":\"ContactList_buttonForm__pXAqB\",\"form\":\"ContactList_form__MXIri\",\"sr-only\":\"ContactList_sr-only__yLeRB\"};","export const selestSelectors = state => state.items;\nexport const selestFilter = state => state.filter;\nexport const selestLoading = state => state.isLoading;\n","import React, { useState } from 'react';\n\nimport styles from '../contactList/ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selestSelectors } from '../../redux/contacts/selectors/selectors';\nimport { addContacts } from '../../redux/contacts/operation/operation';\nimport Notiflix from 'notiflix';\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selestSelectors);\n  const dispatch = useDispatch();\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isDuplicateName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isDuplicateName) {\n      Notiflix.Notify.info('Sorry, a contact with that name already exists!');\n    } else {\n      dispatch(\n        addContacts({\n          name: name,\n          number: number,\n        })\n      );\n      Notiflix.Notify.success('Super,a contact added successfully');\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleNameChange}\n        placeholder=\"Name\"\n        required\n      />\n      <input\n        className={styles.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleNumberChange}\n        placeholder=\"Phone Number\"\n        required\n      />\n      <button className={styles.buttonForm} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContacts,\n} from '../../redux/contacts/operation/operation';\nimport {\n  selestFilter,\n  selestSelectors,\n  selestLoading,\n} from '../../redux/contacts/selectors/selectors';\nimport styles from '../contactList/ContactList.module.css';\nimport { Button } from 'react-bootstrap';\nimport { PacmanLoader } from 'react-spinners';\nimport Notiflix from 'notiflix';\nconst ContactList = () => {\n  const contacts = useSelector(selestSelectors);\n  const filter = useSelector(selestFilter);\n  const isLoading = useSelector(selestLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = id => {\n    Notiflix.Notify.warning('Contact deleted');\n    dispatch(deleteContacts(id));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div>\n      {isLoading ? (\n        <div className=\"sr-only\">\n          <PacmanLoader size={15} color=\"#3669\" />\n        </div>\n      ) : (\n        <div className={styles.list}>\n          {visibleContacts.map(contact => (\n            <div key={contact.id}>\n              <div className={styles.item}>\n                <p className={styles.text}>\n                  {contact.name}: {contact.number}\n                </p>\n                <div>\n                  <Button\n                    className={styles.button}\n                    variant=\"danger\"\n                    type=\"button\"\n                    onClick={() => handleDelete(contact.id)}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from '../contactList/ContactList.module.css';\nimport { selestFilter } from '../../redux/contacts/selectors/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contactsSlice/conactsSlice';\n\nconst Filter = () => {\n  const filter = useSelector(selestFilter);\n  const dispatch = useDispatch();\n  const handleFilterChange = event => {\n    dispatch(updateFilter(event.target.value));\n  };\n  return (\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={filter}\n      onChange={handleFilterChange}\n      placeholder=\"Search Contacts\"\n    />\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operation/operation';\n// import { selestLoading } from '../redux/contacts/selectors/selectors';\nimport ContactForm from '../components/сontactForm/ContactForm';\nimport ContactList from '../components/contactList/ContactList';\nimport Filter from '../components/filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(selestLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selestSelectors","state","items","selestFilter","filter","selestLoading","isLoading","useState","name","setName","number","setNumber","contacts","useSelector","dispatch","useDispatch","className","styles","onSubmit","event","preventDefault","some","contact","toLowerCase","Notiflix","addContacts","type","value","onChange","target","placeholder","required","useEffect","fetchContacts","visibleContacts","includes","PacmanLoader","size","color","map","Button","variant","onClick","id","deleteContacts","updateFilter","Contacts"],"sourceRoot":""}